{
  "swagger": "2.0",
  "info": {
    "title": "Express + TypeScript API",
    "version": "1.0.0",
    "description": "Documentation for Express + TypeScript Server"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/chain/chains": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/account/account-factories": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/account/backend-wallets": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/account/smart-account/personal-wallet/{walletAddress}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/account/smart-account": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Register a new smart account",
            "schema": {
              "$ref": "#/definitions/SmartAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/account/session-key": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Register Session Key",
            "schema": {
              "$ref": "#/definitions/RegisterSessionKey"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/chain-event/tags/{chainId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "chainId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/chain-event/tags": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/chain-event/base-listeners/functions": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/chain-event/base-listeners/triggers/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/chain-event/base-listeners/trigger-with-actions/id/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/chain-event/base-listeners/trigger-with-actions/user/{userId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/chain-event/base-listeners/trigger-with-actions/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Add a new trigger with actions",
            "schema": {
              "$ref": "#/definitions/EventFetchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/chain-event/base-listeners/trigger-with-actions/update/{id}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update a trigger with actions",
            "schema": {
              "$ref": "#/definitions/EventFetchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/chain-event/base-listeners/trigger-with-actions/delete/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/chain-event/base-listeners/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/chain-event/base-listeners": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Register a new user",
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/destination/destination-config-schema/{destinationType}/{subType?}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "destinationType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subType?",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "definitions": {
    "Condition": {
      "type": "object",
      "properties": {
        "operator": {
          "type": "string",
          "example": "eq"
        },
        "value": {
          "type": "string",
          "example": "\"UP\""
        },
        "field": {
          "type": "string",
          "example": "$.\"direction\""
        }
      }
    },
    "Destination": {
      "type": "object",
      "properties": {
        "destinationType": {
          "type": "string",
          "example": "telegram"
        },
        "destinationConfig": {
          "type": "string",
          "example": "{\"template\":\"ETH Price:\",\"telegramChatId\":\"6200972469\",\"telegramUserId\":\"LakshyaSky\"}"
        }
      }
    },
    "Action": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "test_user"
        },
        "name": {
          "type": "string",
          "example": "test_action"
        },
        "chainId": {
          "type": "number",
          "example": 1
        },
        "conditions": {
          "type": "array",
          "example": [
            "Condition"
          ],
          "items": {
            "type": "string"
          }
        },
        "destinations": {
          "type": "array",
          "example": [
            "Destination"
          ],
          "items": {
            "type": "string"
          }
        },
        "loopRules": {
          "type": "string",
          "example": "LoopRules"
        }
      }
    },
    "LoopRules": {
      "type": "object",
      "properties": {
        "loop": {
          "type": "boolean",
          "example": false
        },
        "loopConfig": {
          "type": "string",
          "example": "{\"maxExecutions\": 5}"
        }
      }
    },
    "EventFetchRequest": {
      "type": "object",
      "properties": {
        "eventFetchRequestId": {
          "type": "number",
          "example": 1
        },
        "functionName": {
          "type": "string",
          "example": "SPOT_PRICE_MATCH"
        },
        "functionArgs": {},
        "addedBy": {
          "type": "string",
          "example": "test_user"
        },
        "actions": {
          "type": "array",
          "example": [
            "Action"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SmartAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "userAddress": {
          "type": "string",
          "example": "0x000"
        },
        "accountAddress": {
          "type": "string",
          "example": "0x000"
        },
        "factoryAddress": {
          "type": "string",
          "example": "0x000"
        },
        "chainId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "RegisterSessionKey": {
      "type": "object",
      "properties": {
        "sessionKeyAddress": {
          "type": "string",
          "example": "0x000"
        },
        "smartAccountAddress": {
          "type": "string",
          "example": "0x000"
        },
        "chainId": {
          "type": "number",
          "example": 1
        },
        "approvedCallTargets": {
          "type": "array",
          "example": [
            "0x000"
          ],
          "items": {
            "type": "string"
          }
        },
        "nativeTokenLimit": {
          "type": "number",
          "example": 0.5
        },
        "startDate": {
          "type": "string",
          "example": "2021-01-01T00:00:00.000Z"
        },
        "expirationDate": {
          "type": "string",
          "example": "2021-01-01T00:00:00.000Z"
        },
        "txnHash": {
          "type": "string",
          "example": "0x000"
        }
      }
    },
    "RegisterUser": {
      "type": "object",
      "properties": {
        "userAddress": {
          "type": "string",
          "example": "0x000"
        },
        "address_type": {
          "type": "string",
          "example": "wallet"
        }
      }
    }
  }
}